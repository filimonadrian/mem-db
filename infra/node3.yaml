---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node3
  labels:
    app: node3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node3
  template:
    metadata:
      labels:
        app: node3
    spec:
      serviceAccountName: leader-election-sa
      containers:
      - name: node3
        imagePullPolicy: IfNotPresent
        image: docker.io/library/mem-db:latest
        command: ['./mem-db', '/etc/config/config.json']
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: data
          mountPath: /data
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: node3-configmap
          items:
          - key: config.json
            path: config.json
      - name: data
        hostPath: 
          path: /data/node3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: node3-configmap
data:
  config.json: |
    {
        "serviceOptions": {
            "apiOptions": {
                "port": 8080,
                "useGRPC": false
            }
        },
        "walOptions": {
            "walFilePath": "/data/wal/wal-file.wal",
            "restore": true,
            "syncTimer": 10,
            "syncMaxBytes": 1000
        },
        "snapshotOptions": {
            "dirPath": "/data/snapshot",
            "syncTimer": 1
        },
        "loggerOptions": {
            "console": true,
            "logLevel": "debug",
            "logFilepath": "/data/log/memdb.log"
        },
        "nodeOptions": {
            "name": "node3-service.default.svc.cluster.local",
            "masterID": "node1-service.default.svc.cluster.local",
            "heartbeatInterval": 10,
            "leaderElection": true,
            "apiOptions": {
                "port": 8081,
                "useGRPC": false
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: node3-service
spec:
  type: ClusterIP
  selector:
    app: node3
  ports:
    - name: db-service
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: node-service
      protocol: TCP
      port: 8081
      targetPort: 8081
